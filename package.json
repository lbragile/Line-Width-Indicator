{
  "name": "line-width-indicator",
  "displayName": "Line Width Indicator",
  "description": "Shows how many characters you can type until line limit is reached.",
  "publisher": "lbragile",
  "version": "0.0.5",
  "engines": {
    "vscode": "^1.46.0"
  },
  "author": {
    "name": "Lior Bragilevsky",
    "homepage": "https://www.github.com/lbragile"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/lbragile/Line-Width-Indicator/issues",
    "email": "lbragile.masc@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/lbragile/Line-Width-Indicator.git"
  },
  "homepage": "https://github.com/lbragile/Line-Width-Indicator/blob/master/README.md",
  "categories": [
    "Formatters",
    "Other"
  ],
  "keywords": [
    "word count",
    "line limit",
    "character count",
    "character count indicator"
  ],
  "icon": "images/lwi-logo128.png",
  "galleryBanner": {
    "color": "#BBDDFF",
    "theme": "light"
  },
  "activationEvents": [
    "onCommand:LWI.activateLWI",
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "LWI.activateLWI",
        "title": "Enable LWI"
      },
      {
        "command": "LWI.deactivateLWI",
        "title": "Disable LWI"
      }
    ],
    "keybindings": [
      {
        "command": "LWI.deactivateLWI",
        "key": "ctrl+k ctrl+d",
        "when": "editorTextFocus"
      },
      {
        "command": "LWI.activateLWI",
        "key": "ctrl+k ctrl+a",
        "when": "editorTextFocus"
      }
    ],
    "configuration": {
      "title": "Line Width Indicator",
      "properties": {
        "LWI.limits.breakpoints": {
          "type": "array",
          "default": [
            {
              "color": "rgb(0, 255, 0, 0.6)",
              "column": 110
            },
            {
              "color": "rgb(255, 255, 0, 0.6)",
              "column": 115
            },
            {
              "color": "rgb(255, 0, 0, 0.6)",
              "column": 120
            }
          ],
          "description": "The counter will be a given color when its count is below that column's respective value."
        },
        "LWI.excludedLanguages": {
          "type": "array",
          "default": [
            "json",
            "jsonc",
            "css",
            "html",
            "markdown",
            "plaintext",
            "scss",
            "yaml"
          ],
          "markdownDescription": "An array of [languages identifiers](https://code.visualstudio.com/docs/languages/identifiers#_known-language-identifiers) for which you wish not to use the 'Line Width Indicator' extension."
        },
        "LWI.limits.formattingThreshold": {
          "type": "number",
          "default": 5,
          "description": "Lets LWI know when to add a 'format ignore' comment to the line. If you only have 1 breakpoint, then its column value + this number is used as the upper bound. A comment is added only once the counter is between these values. If multiple breakpoints are set, then the last value is used.",
          "minimum": 0,
          "maximum": 100
        },
        "LWI.comment.ignoreComment": {
          "type": "string",
          "default": "// prettier-ignore",
          "description": "A comment that is added to preserve the current line formatting (no wrapping). Depending on your formatter, this will differ.",
          "minLength": 4,
          "maxLength": 50,
          "pattern": "// [a-z]+"
        },
        "LWI.comment.autoRemoveBelowLower": {
          "type": "boolean",
          "default": "true",
          "markdownDescription": "Once an `#LWI.comment.ignoreComment#` is added, this will auto remove it if the text length falls below the lowest breakpoint."
        },
        "LWI.comment.autoRemoveAboveUpper": {
          "type": "boolean",
          "default": "true",
          "markdownDescription": "Once an `#LWI.comment.ignoreComment#` is added, this will auto remove it if the text length passes the last breakpoint."
        },
        "LWI.comment.autoComment": {
          "type": "boolean",
          "default": "true",
          "markdownDescription": "Whether or not to automatically add the `#LWI.comment.ignoreComment#`."
        }
      }
    }
  },
  "badges": [
    {
      "url": "https://img.shields.io/visual-studio-marketplace/v/lbragile.line-width-indicator?label=Version&style=flat-square",
      "description": "VS Marketplace Version",
      "href": "https://marketplace.visualstudio.com/items?itemName=lbragile.line-width-indicator"
    },
    {
      "url": "https://img.shields.io/github/license/lbragile/Line-Width-Indicator?&label=License&&style=flat-square",
      "description": "License",
      "href": "https://github.com/lbragile/Line-Width-Indicator/blob/master/LICENSE.md"
    }
  ],
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "test-compile": "tsc -p ./",
    "test-watch": "tsc -watch -p ./",
    "pretest": "npm run test-compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^7.1.3",
    "@types/mocha": "^8.0.4",
    "@types/node": "^12.11.7",
    "@types/vscode": "^1.46.0",
    "@typescript-eslint/eslint-plugin": "^4.14.1",
    "@typescript-eslint/parser": "^4.14.1",
    "eslint": "^7.19.0",
    "glob": "^7.1.6",
    "mocha": "^8.2.1",
    "ts-loader": "^8.0.14",
    "typescript": "^4.1.3",
    "vscode-test": "^1.5.0",
    "webpack": "^5.19.0",
    "webpack-cli": "^4.4.0"
  }
}
